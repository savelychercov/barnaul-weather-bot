import os
import telebot
import weather
from buttons import buttons
from random import choice
from time import sleep
import requests
import dotenv


dotenv.load_dotenv()
api_key = os.getenv("API_KEY")

bot = telebot.TeleBot(api_key)

excuses = [
    "–ü–æ–≥–æ–¥–∞ –Ω–µ –º–µ—Ä—è–µ—Ç—Å—è...",
    "–ì—Ä–∞–¥—É—Å–Ω–∏–∫ —Å–ª–æ–º–∞–ª—Å—è, —á–∏–Ω—é...",
    "–î–∞ —á—Ç–æ –∂ —Ç–∞–∫–æ–µ...",
    "–¢—è–∂–µ–ª–æ...",
    "–°–µ–≥–æ–¥–Ω—è –±–µ–∑ –ø–æ–≥–æ–¥—ã...",
    "üí•..."
]

error_text = "–Ø —É—Å—Ç–∞–ª –∏ –Ω–µ —Ö–æ—á—É —Ä–∞–±–æ—Ç–∞—Ç—å, –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –ø–æ–∑–∂–µ –∫–æ–≥–¥–∞ —è –æ—Ç–¥–æ—Ö–Ω—É"


def edit_message(chat_id, message_id, day, reroll=False):
    try:
        if reroll:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="–û–±–Ω–æ–≤–ª—è–µ–º...")
            sleep(0.5)

        weather_data = None
        last_ex = ""
        for _ in range(5):
            data = weather.get_weather(day)
            if not data[0] == "Err":
                weather_data = data[1]
                break
            else:
                log(data[1])
                ex = choice(excuses)
                while ex == last_ex:
                    ex = choice(excuses)
                last_ex = ex
                bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text=ex)
                sleep(1)
        else:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=error_text)
            return

        weather_text = f"–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ {weather_data['date']}\n\n"
        weather_text += f"üîÜ *–î–ù–ï–ú*:\n*–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞*: {weather_data['day']['temp']}\n*–ü–æ–≥–æ–¥–∞*: {weather_data['day']['weather']}\n*–í–µ—Ç–µ—Ä*: {weather_data['day']['wind']}\n\n"
        if any([weather_data["night"]["temp"], weather_data['night']['weather'], weather_data['night']['wind']]):
            weather_text += f"üåô *–ù–û–ß–¨–Æ*:\n*–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞*: {weather_data['night']['temp']}\n*–ü–æ–≥–æ–¥–∞*: {weather_data['night']['weather']}\n*–í–µ—Ç–µ—Ä*: {weather_data['night']['wind']}\n\n"

        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=weather_text,
            parse_mode="Markdown",
            reply_markup=buttons([{"text": "–û–±–Ω–æ–≤–∏—Ç—å üîÑ", "url": None, "key": f"update|{chat_id}|{message_id}|{day}"}]))

    except telebot.apihelper.ApiTelegramException as e:
        pass

    except Exception as e:
        log(e)
        bot.send_message(
            chat_id,
            "–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞..."
        )


def send_weather(ctx, day: str):
    send = bot.send_message(
        ctx.chat.id,
        "–ò–∑–º–µ—Ä—è—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –Ω–∞ —É–ª–∏—Ü–µ...üå°üå°üå°")
    edit_message(ctx.chat.id, send.message_id, day)


logs_key = None  # If you want to send logs to your telegram log bot
logs_id = "1234568790"  # Your telegram id


def log(text):
    print(text)
    if logs_key is None: return
    url = f"https://api.telegram.org/bot{logs_key}/sendMessage"
    params = {"chat_id": logs_id, "text": "Weather Telegram Bot: " + str(text), }
    requests.post(url, params=params)


@bot.message_handler(commands=['start', 'hello'])
def send_welcome(message):
    bot.reply_to(message, "–°—Ç–∞—Ä—Ç—É–µ–º! –ñ–º–∏ –Ω–∞ –∫–æ–º–º–∞–Ω–¥—É ‚Üì")


@bot.message_handler(commands=["today"])
def send_today_weather(ctx):
    send_weather(ctx, "today")


@bot.message_handler(commands=["tomorrow"])
def generate_answer(ctx):
    send_weather(ctx, "tomorrow")


@bot.message_handler(commands=["aftertomorrow"])
def generate_answer(ctx):
    send_weather(ctx, "after_tomorrow")


"""---------------------------------------------------------------------------------------"""


@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    if "update" in call.data:
        edit_message(*call.data.split("|")[1:], reroll=True)
        # bot.send_message(call.message.chat.id, f"–Ø –ø–æ–∫–∞ –µ—â–µ —Ç–∞–∫ –Ω–µ –º–æ–≥—É, –Ω–æ —É—á—É—Å—å\n–ê –µ—â–µ –≤–æ—Ç: {call.data}")


log("Bot is ready!")
bot.infinity_polling()
